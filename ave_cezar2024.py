# –ê–≤–µ, –¶–µ–∑–∞—Ä—å üå∂Ô∏è
def ave_cezar(text, rot_n):
    eng = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    rus = "–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è–ê–ë–í–ì–î–ï–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø"
    new_text = ""
    if rot_n > 0:   # –î–ª—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞ –≤–ø—Ä–∞–≤–æ
        for i in range(len(text)):
            if text[i] in eng:   # –î–ª—è ENG
                if text[i].islower():   # –ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) + rot_n)
                    if ord(x) > ord("z"):   # –µ—Å–ª–∏ –¥–∞–ª—å—à–µ z = 122 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å –±—É–∫–≤—ã "–∞".
                        new_text += chr(ord("a") + (rot_n - (123 - ord(text[i]))))   # –¥–æ —é–Ω–∏–∫–æ–¥ a = 97 –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç —à–∞–≥–∞ –ø–æ—Å–ª–µ –±—É–∫–≤—ã "z"
                    else:
                        new_text += x
                if text[i].isupper():   # –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) + rot_n)   # –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É
                    if ord(x) > ord("Z"):   # –µ—Å–ª–∏ –¥–∞–ª—å—à–µ Z = 90 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å –±—É–∫–≤—ã "–∞".
                        new_text += chr(ord("A") + (rot_n - (91 - ord(text[i]))))   # –¥–æ —é–Ω–∏–∫–æ–¥ –ê = 65 –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç —à–∞–≥–∞ –ø–æ—Å–ª–µ –±—É–∫–≤—ã "Z"
                    else:
                        new_text += x
            if text[i] in rus:   # –î–ª—è RUS
                if text[i].islower():   # –ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) + rot_n)
                    if ord(x) > ord("—è"):   # –µ—Å–ª–∏ –¥–∞–ª—å—à–µ —è = 1103 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å –±—É–∫–≤—ã "–∞".
                        new_text += chr(ord("–∞") + (rot_n - (1104 - ord(text[i]))))   # –¥–æ —é–Ω–∏–∫–æ–¥ a = 1072 –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç —à–∞–≥–∞ –ø–æ—Å–ª–µ –±—É–∫–≤—ã "—è"
                    else:
                        new_text += x
                if text[i].isupper():   # –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) + rot_n)   # –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É
                    if ord(x) > ord("–Ø"):   # –µ—Å–ª–∏ –¥–∞–ª—å—à–µ –Ø = 1071 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å –±—É–∫–≤—ã "–ê".
                        new_text += chr(ord("–ê") + (rot_n - (1072 - ord(text[i]))))   # –¥–æ —é–Ω–∏–∫–æ–¥ a = 97 –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç —à–∞–≥–∞ –ø–æ—Å–ª–µ –±—É–∫–≤—ã "–Ø"
                    else:
                        new_text += x
            if text[i].isalpha() == False:
                new_text += text[i]   # –î–ª—è —Ç—Ä–µ—à–∞ –∏ —Ü–∏—Ñ—Ä
        return new_text
####################################################################
    if rot_n < 0:   # –î–ª—è –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞ –≤–ª–µ–≤–æ
        for i in range(len(text)):
            if text[i] in eng:   # –î–ª—è ENG
                if text[i].islower():   # –ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) - abs(rot_n))
                    if ord(x) < ord("a"):
                        new_text += chr(ord("z") - (abs(rot_n) - (ord(text[i]) - ord("a") + 1)))
                    else:
                        new_text += x
                if text[i].isupper():   # –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) - abs(rot_n))
                    if ord(x) < ord("A"):
                        new_text += chr(ord("Z") - (abs(rot_n) - (ord(text[i]) - ord("A") + 1)))
                    else:
                        new_text += x
            if text[i] in rus:   # –î–ª—è RUS
                if text[i].islower():   # –ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) - abs(rot_n))
                    if ord(x) < ord("–∞"):
                        new_text += chr(ord("—è") - (abs(rot_n) - (ord(text[i]) - ord("–∞") + 1)))
                    else:
                        new_text += x
                if text[i].isupper():   # –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    x = chr(ord(text[i]) - abs(rot_n))
                    if ord(x) < ord("–ê"):
                        new_text += chr(ord("–Ø") - (abs(rot_n) - (ord(text[i]) - ord("–ê") + 1)))
                    else:
                        new_text += x
            if text[i].isalpha() == False:
                new_text += text[i]   # –î–ª—è —Ç—Ä–µ—à–∞ –∏ —Ü–∏—Ñ—Ä
        return new_text

def uncoding_cezar(text):
    print("–í–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç(—ã) —Ç–µ–∫—Å—Ç–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –¶–µ–∑–∞—Ä—è, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π:")
    list = []
    for i in range(1, 32):
        list.append(ave_cezar(text, i))
    return print(*list, sep='\n')

text = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
print("1) –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –¶–µ–∑–∞—Ä—è;", "\n2) –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –¶–µ–∑–∞—Ä—è")
choise = input("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å(1/2)?:")
if choise == "1":
    rot_n = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ ROT N (—Å–¥–≤–∏–≥ –≤ –æ–¥–Ω—É –∏–∑ —Å—Ç–æ—Ä–æ–Ω):"))
    print(ave_cezar(text, rot_n))
elif choise == "2":
    print(uncoding_cezar(text))